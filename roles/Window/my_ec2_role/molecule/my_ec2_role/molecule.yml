---
dependency:
  name: galaxy
driver:
  name: ec2
platforms:
  - name: instance
    image: ami-09c08b542a3df6eac
    image_owner: "801119661308"
    image_name: "amazon/Windows_Server-2022-English-Full-Base-2023.01.19"
    instance_type: t2.micro
    vpc_subnet_id: subnet-0cd6574a3c1f4a868
    user_data:  |
      <powershell>
      $url = "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
      $file = "$env:c\ConfigureRemotingForAnsible.ps1"
      (New-Object -TypeName System.Net.WebClient).DownloadFile($url, $file)
      powershell.exe -ExecutionPolicy ByPass -File $file -EnableCredSSP -Verbose

      $admin = [ADSI]("WinNT://./administrator, user")
      $admin.SetPassword("mole12345%")

      net user Administrator "mole12345%"
      </powershell>
    tags:
      Name: molecule_windows
    connection_options:
      sudo: false
      ansible_user: Administrator
      ansible_password: "mole12345%"
      ansible_port: 5986
      ansible_connection: winrm
      ansible_winrm_scheme: https
      ansible_winrm_server_cert_validation: ignore
      connection: winrm
scenario:
  name: my_ec2_role
  test_sequence:
    - destroy # destroy before dependency
    - lint
    - dependency # dependency need to be first since we install a module (selenium) via ansible galaxy
    - syntax 
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - destroy
provisioner:
  name: ansible
verifier:
  name: ansible

